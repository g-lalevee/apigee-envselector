#!/bin/bash

set -e

ENVSELECTOR_ROOT=$( (cd "$(dirname "$0")" && cd .. && pwd ))
source "$ENVSELECTOR_ROOT/lib/logutils.sh"

for dependency in jq sackmesser
do
  if ! [ -x "$(command -v $dependency)" ]; then
    >&2 logfatal "Required command is not on your PATH: $dependency."
    >&2 logfatal "Please install it before you continue."
    exit 2
  fi
done

print_usage() {
    cat << EOF
Apigee Environment Selector.
usage: envselector STRATEGY -e ENV -o ORG [-t TOKEN]
  STRATEGY:
    fulfill
    spread
  Options:
    -g,--envgroup, Apigee environment group name
    -o,--organization, Apigee organization name
    -t,--token, GCP token 
    --debug, show verbose debug output
    --debug-all, show verbose debug output, including Sackmesser
EOF
}

TOKEN=$(gcloud auth print-access-token)
STRATEGY="$1"


if [ -z "$STRATEGY" ] || [ "$STRATEGY" == "help" ]; then
    print_usage
    exit 0
elif [ -z "$STRATEGY" ] || [ "$STRATEGY" != "fulfill" ] && [ "$STRATEGY" != "spread" ]; then
#elif [ "$STRATEGY" != "fulfill" ] && [ "$STRATEGY" != "spread" ]; then
    logerror "Please provide a valid strategy."
    exit 1
fi


shift 1
posArgs=()

while [ "$#" -gt 0 ]; do
  case "$1" in
    -g) export ENV_GROUP="$2"; shift 2;;
    -o) export APIGEE_ORG="$2"; shift 2;;
    -t) export TOKEN="$2"; shift 2;;
    
    --debug)  debug="T"; shift 1;;
    --debug-all)  export debug="T"; shift 1;;
    --envgroup) export ENV_GROUP="${2}"; shift 2;;
    --organization) export APIGEE_ORG="${2}"; shift 2;;
    --token) export TOKEN="${2}"; shift 2;;

    -*) logfatal "unknown option: $1" >&2; exit 1;;
    *) posArgs+=("$1"); shift 1;;
  esac
done

logdebug "Selecting target environment to deploy proxy in environment attached to environment group \"$ENV_GROUP\", with strategy \"$STRATEGY\"..."

# Retrieve environment list from environment group name parameter
ENV_LIST=$(sackmesser list --googleapi -t "$TOKEN" organizations/$APIGEE_ORG/envgroups/$ENV_GROUP/attachments | jq -r .environmentGroupAttachments[].environment)
if [ -z "$ENV_LIST" ]; then
  exit 1
fi
# Retrieve proxy deployment number for each environment
for ENV in $ENV_LIST
do
    DEPLOYMENT_NUMBER=$(sackmesser list --googleapi -t "$TOKEN" organizations/$APIGEE_ORG/environments/$ENV/deployments | jq ". | length")
    if [ $DEPLOYMENT_NUMBER -lt 50 ]; then
      logdebug "$ENV -> $DEPLOYMENT_NUMBER"
      DEPLOYMENT_LIST="$DEPLOYMENT_LIST$ENV $DEPLOYMENT_NUMBER\n"
    else
      logdebug "$ENV -> $DEPLOYMENT_NUMBER *"
    fi
done
# remove last line feed
DEPLOYMENT_LIST=$(echo $DEPLOYMENT_LIST | sed 's/..$//')


case "$STRATEGY" in
  fulfill)
      # select environment having max number of deployed proxy, less than 50
      SELECTED=$(echo -e $DEPLOYMENT_LIST |  sort -k2nr -k1 | head -n 1  | cut -f 1 -d " ")
      logdebug "\nSelected environment: $SELECTED"
      ;;
  spread)
      # select environment having min number of deployed proxy, less than 50
      SELECTED=$(echo -e $DEPLOYMENT_LIST |  sort -k2n -k1 | head -n 1 | cut -f 1 -d " ")
      logdebug "\nSelected environment: $SELECTED"
      ;;
  *)
      echo $"Strategy: $0 {fulfill|spread}"
      exit 1
esac

echo $SELECTED

